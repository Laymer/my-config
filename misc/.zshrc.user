if [[ ! ":$PATH:" =~ ":/usr/local/bin:" ]]; then
   export PATH="/usr/local/bin:$PATH"
fi

if [[ ! ":$PATH:" =~ ":/usr/local/sbin:" ]]; then
   export PATH="/usr/local/sbin:$PATH"
fi

if [[ ! ":$PATH:" =~ ":$HOME/bin:" ]]; then
   export PATH="$HOME/bin:$PATH"
fi

if [[ -z "$SHELL" ]]; then
    export SHELL=`command -v zsh`
fi

alias my-path="source my-path"
alias e="my-emacs -nw"
alias e-reset="emacsclient --alternate-editor=true -e '(kill-emacs)'"
alias g="git"
alias s="sudo"
alias o="open"
alias xclip="xclip -selection clipboard"
alias emacs="emacs -nw"
alias lt="ll --sort=time -r"

if type -p dircolors > /dev/null; then
    if [[ "$TERM" = dvtm || "$TERM" = dvtm-* ]]; then 
        eval `TERM=xterm${TERM#dvtm} dircolors`
    else
        eval `dircolors`
    fi
fi

local ret_status="%(?:%{$fg_bold[green]%}-:%{$fg_bold[red]%}%?)"

ZSH_THEME_GIT_PROMPT_PREFIX="git:(%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%}) %{$fg[yellow]%}(x)%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"

setopt NO_HUP
setopt NO_CHECK_JOBS
setopt NO_SHARE_HISTORY

if [[ $TERM = "dumb" ]]; then
    unsetopt zle
    PS1='$ '
fi

bindkey "\e[1;3D"  backward-word
bindkey "\e[1;5D"  backward-word
bindkey "\e[1;3C"  forward-word
bindkey "\e[1;5C"  forward-word
bindkey "\e[47;5u" undo
bindkey "\e[47;7u" redo
bindkey "^W"       kill-region

if [[ -e "$HOME/.zshrc.user.os" ]]; then
   source "$HOME/.zshrc.user.os"
fi

autoload -Uz add-zsh-hook

preexec_date() {
    DATE=`date +"%H:%M:%S %y-%m-%d"`
    if [[ "$MY_PROMPT_MODE" = "0" ]]; then
        # Assume expr length S calculate the char width of S on terminal.
        # This would work only for regular ascii cmd ...
        C=`expr \( length "$1" + length "$(print -P %c)" + 20 \) / $COLUMNS + 1`
        echo -ne "\033[${C}A$fg_bold[green][${DATE}]$reset_color\033[${C}B\r"
        # export TIME_PREEXEC=`date +%s`
    else
        C=$(($COLUMNS-20))
        echo -e "\033[1A\033[${C}C [${DATE}]"
    fi
}

precmd_date() {
    # export TIME_PRECMD=`date +%s`
    export DATE_PRECMD=`date +"%H:%M:%S %y-%m-%d"`
}

LSPACE() {
  [[ $# > 0 ]] && echo -n ' '
  echo $@
}

add-zsh-hook preexec preexec_date
add-zsh-hook precmd precmd_date

set_prompt() {
  if [[ "$MY_PROMPT_MODE" = "1" ]]; then
    PROMPT='%{$fg_bold[cyan]%}%~%{$reset_color%}
${ret_status}%{$fg_bold[green]%}%p[${SSH_TTY:+%n@%m:}%j]%{$fg_bold[blue]%}$(LSPACE $(git_prompt_info))%{$fg_bold[blue]%} % %{$reset_color%}'
    RPROMPT='${DATE_PRECMD}'
  else
    RPROMPT=' %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} ${ret_status}%{$fg_bold[green]%}%p:${SSH_TTY:+%n@%m:}%j%{$reset_color%}'
    PROMPT=' %{$fg_bold[green]%}${DATE_PRECMD} %{$fg_bold[cyan]%}%c%{$reset_color%} '
  fi

  if [[ -n "$MC_SID" ]]; then
    RPROMPT=''
  fi
}

MY_PROMPT_MODE=0
set_prompt

change_prompt() {
  if [ "$MY_PROMPT_MODE" = "0" ]; then MY_PROMPT_MODE=1
  elif [ "$MY_PROMPT_MODE" = "1" ]; then MY_PROMPT_MODE=0
  fi
  set_prompt
  zle reset-prompt
}
zle -N change_prompt

bindkey "^[[1;3P" change_prompt
